{
  "name": "where-dev",
  "private": true,
  "workspaces": [
    "ui/apps/*",
    "ui/lib",
    "electron",
    "tests"
  ],
  "scripts": {
    "start"                 : "npm run build:happ && npm run start:agent",
    "network"               : "npm run build:happ && concurrently-repeat \"npm run start:agent\"",
    "network-playground"    : "npm run build:happ && concurrently-repeat \"npm run start:agent:playground\"",
    "network-proxied"       : "npm run build:happ && concurrently-repeat \"npm run start:agent-proxied\"",
    "start:agent-proxied"   : "cross-env HC_PORT=$(port) concurrently \"npm run dev:libs\" \"npm run start:happ-proxied\" \"sleep 5 && npm run start -w where\"",
    "start:agent"           : "cross-env HC_PORT=$(port) concurrently \"npm run dev:libs\" \"npm run start:happ\" \"sleep 5 && npm run start -w where\"",
    "start:agent:playground": "cross-env HC_PORT=$(port) concurrently \"npm run playground\" \"npm run dev:libs\" \"npm run start:happ\" \"sleep 5 && npm run start -w where\"",
    "dev:libs"              : "npm run build:watch -w @where/elements",
    "start-proxied"         : "npm run build:happ && npm run build -w @where/elements && cross-env HC_PORT=$(port) concurrently -k \"npm run start:happ-proxied\" \"npm run start -w where\"",
    "start-rerun"           : "cross-env HC_PORT=8888 concurrently -k \"npm run build:watch -w @where/elements\" \"hc s run 0 -p 8888\" \"npm run start -w where\"",
    "prepare"               : "npm run build -w @where/elements && npm run build -w where",
    "test"                  : "npm run build:happ && npm run build -w @where/elements && npm t -w tests",
    "start:happ"            : "RUST_LOG=warn hc s generate ./dna/workdir/happ/where.happ --run=$HC_PORT -a where network mdns",
    "start:happ-proxied"    : "RUST_LOG=warn hc s generate ./dna/workdir/happ/where.happ --run=$HC_PORT -a where network --bootstrap https://bootstrap-staging.holo.host/ quic -p=kitsune-proxy://SYVd4CF3BdJ4DS7KwLLgeU3_DbHoZ34Y-qroZ79DOs8/kitsune-quic/h/165.22.32.11/p/5779/--",
    "package"               : "npm run build:happ && npm run build:ui && npm run build:webapp",
    "build:ui"              : "npm run build -w @where/elements && npm run package -w where",
    "build:webapp"          : "hc web-app pack workdir",
    "build:happ"            : "npm run build:dna && hc app pack ./dna/workdir/happ",
    "build:dna"             : "npm run build:zome && hc dna pack ./dna/workdir/dna",
    "build:zome"            : "CARGO_TARGET_DIR=target cargo build --release --target wasm32-unknown-unknown",
    "clean"                 : "rm -rf node_modules && rm -rf ui/apps/where/node_modules/  && rm -rf ui/lib/node_modules && rm -rf test/node_modules && rm -rf electron/node_modules",
    "clean:hc"              : "rm -rf .hc*",
    "playground"            : "run-singleton \"holochain-playground\"",
    "ci:hc-install"         : "bash scripts/install-hc-tools.sh",
    "ci:electron-install"   : "cd electron && npm install --ignore-scripts",
    "ci:ui-install"         : "cd ui/lib && npm install --ignore-scripts",
    "ci:app-install"        : "cd ui/apps/where && npm install --ignore-scripts",
    "dist"                  : "npm run tsc -w where-app && npm run dist -w where-app",
    "electron"              : "npm run package && npm run start -w where-app"
  },
  "devDependencies": {
    "@holochain-playground/cli": "^0.0.8",
    "concurrently": "^6.2.1",
    "concurrently-repeat": "^0.0.1",
    "cross-env": "^7.0.3",
    "json-parse-better-errors": "^1.0.2",
    "new-port-cli": "^1.0.0",
    "run-singleton-cli": "^0.0.5"
  }
}
