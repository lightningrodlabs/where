{
  "name": "where-dev",
  "private": true,
  "workspaces": [
    "dna/tests",
    "electron",
    "webapp",
    "webapp.ludotheque",
    "webcomponents",
    "we-applet"
  ],
  "scripts": {
    "version"               : "hc --version && holochain --version && lair-keystore --version",
    "ci:tsc"                : "tsc --version",
    "ci:hc-install"         : "bash scripts/install-hc-tools.sh",
    "hash-zome-install"     : "bash scripts/download-hash-zome.sh",
    "hash-zome"             : "bash scripts/write-zome-hash.sh",
    "build:zome"            : "CARGO_TARGET_DIR=target cargo build --release --target wasm32-unknown-unknown",
    "build:dna"             : "npm run build:zome && hc dna pack dna/workdir/dna-where && hc dna pack dna/workdir/dna-ludotheque",
    "build:happ"            : "npm run build:dna && hc app pack dna/workdir/happ-where && hc app pack dna/workdir/happ-where-standalone && hc app pack dna/workdir/happ-ludotheque && npm run hash-zome",
    "build:webcomponents"   : "npm run build -w @where/elements",
    "build:webapp"          : "npm run build -w where",
    "build:ludo"            : "npm run build -w @where/elements && npm run package -w ludotheque",
    "dev:components"        : "npm run build:watch -w @where/elements",
    "prepare-test"          : "npm run clean:hc & npm run build:webcomponents && npm run build:webapp",
    "devtest"               : "npm run prepare-test && npm run start:agent",
    "devtest:standalone"    : "npm run prepare-test && npm run start:standalone",
    "devtest:we"            : "npm run prepare-test && npm run devtest -w we-applet",
    "start:ludo"            : "npm run build:happ && npm run start:agent-ludo",
    "start"                 : "npm run build:happ && npm run start:agent",
    "network"               : "npm run build:happ && concurrently-repeat \"npm run start:agent\"",
    "network-playground"    : "npm run build:happ && concurrently-repeat \"npm run start:agent:playground\"",
    "network-proxied"       : "npm run build:happ && concurrently-repeat \"npm run start:agent-proxied\"",
    "start:agent-proxied"   : "cross-env HC_PORT=$(port) ADMIN_PORT=$(port) APP_DEV=true concurrently \"npm run dev:components\" \"npm run start:happ-proxied\" \"sleep 7 && npm run start -w where\"",
    "start:agent"           : "cross-env HC_PORT=$(port) ADMIN_PORT=$(port) APP_DEV=true concurrently \"npm run dev:components\" \"npm run start:happ\" \"sleep 7 && npm run start -w where\"",
    "start:standalone"      : "cross-env HC_PORT=$(port) ADMIN_PORT=$(port) APP_DEV=true concurrently \"npm run dev:components\" \"npm run start:happ-standalone\" \"sleep 7 && npm run start -w where\"",
    "start:agent-ludo"      : "cross-env HC_PORT=$(port) ADMIN_PORT=$(port) APP_DEV=true concurrently \"npm run dev:components\" \"npm run start:happ\" \"sleep 7 && npm run start -w ludotheque\"",
    "start:agent:playground": "cross-env HC_PORT=$(port) ADMIN_PORT=$(port) APP_DEV=true concurrently \"npm run playground\" \"npm run dev:components\" \"npm run start:happ\" \"sleep 7 && npm run start -w where\"",
    "start-proxied"         : "npm run build:happ && npm run build -w @where/elements && cross-env HC_PORT=$(port) concurrently -k \"npm run start:happ-proxied\" \"npm run start -w where\"",
    "start-rerun"           : "cross-env HC_PORT=8888 concurrently -k \"npm run build:watch -w @where/elements\" \"hc s run 0 -p 8888\" \"npm run start -w where\"",
    "test"                  : "npm run build:happ && npm run build -w @where/elements && npm t -w @where/tests",
    "start:happ-standalone" : "RUST_LOG=warn echo \"pass\" | hc s --piped -f=$ADMIN_PORT generate dna/workdir/happ-where-standalone/where-standalone.happ --run=$HC_PORT -a where network mdns",
    "start:happ"            : "RUST_LOG=warn echo \"pass\" | hc s --piped -f=$ADMIN_PORT generate dna/workdir/happ-where/where.happ --run=$HC_PORT -a where network mdns",
    "start:happ-proxied"    : "RUST_LOG=warn echo \"pass\" | hc s --piped -f=$ADMIN_PORT generate dna/workdir/happ-where/where.happ --run=$HC_PORT -a where network --bootstrap https://bootstrap-staging.holo.host/ quic -p=kitsune-proxy://SYVd4CF3BdJ4DS7KwLLgeU3_DbHoZ34Y-qroZ79DOs8/kitsune-quic/h/165.22.32.11/p/5779/--",
    "clean"                 : "bash scripts/clean.sh",
    "clean:hc"              : "rm -rf .hc*",
    "playground"            : "run-singleton \"holochain-playground\"",
    "package:webhapp"       : "hc web-app pack webapp/webhapp.workdir",
    "package"               : "npm run build:happ && npm run build:webapp && npm run package:webhapp && cp dna/workdir/happ-where/where.happ electron/bin/where.happ && bash scripts/copy-binaries.sh",
    "electron"              : "npm run package && npm run start -w where-app",
    "dist:electron"         : "cd electron && npm run tsc && npm run dist",
    "dist:electron-linux"   : "cd electron && npm run tsc && npm run dist-linux"
  },
  "devDependencies": {
    "concurrently": "^6.2.1",
    "concurrently-repeat": "^0.0.1",
    "cross-env": "^7.0.3",
    "json-parse-better-errors": "^1.0.2",
    "new-port-cli": "^1.0.0",
    "run-singleton-cli": "^0.0.7"
  }
}
