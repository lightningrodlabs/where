{
  "name": "where-dev",
  "private": true,
  "workspaces": [
    "dna/tests",
    "electron",
    "ui/apps/*",
    "ui/lib"
  ],
  "scripts": {
    "start"                 : "npm run build:happ && npm run start:agent",
    "start:ludo"            : "npm run build:happ && npm run start:agent-ludo",
    "network"               : "npm run build:happ && concurrently-repeat \"npm run start:agent\"",
    "network-playground"    : "npm run build:happ && concurrently-repeat \"npm run start:agent:playground\"",
    "network-proxied"       : "npm run build:happ && concurrently-repeat \"npm run start:agent-proxied\"",
    "start:agent-proxied"   : "cross-env HC_PORT=$(port) ADMIN_PORT=$(port) concurrently \"npm run dev:libs\" \"npm run start:happ-proxied\" \"sleep 5 && npm run start -w where\"",
    "start:agent"           : "cross-env HC_PORT=$(port) ADMIN_PORT=$(port) concurrently \"npm run dev:libs\" \"npm run start:happ\" \"sleep 5 && npm run start -w where\"",
    "start:agent-ludo"      : "cross-env HC_PORT=$(port) ADMIN_PORT=$(port) concurrently \"npm run dev:libs\" \"npm run start:happ\" \"sleep 5 && npm run start -w ludotheque\"",
    "start:agent:playground": "cross-env HC_PORT=$(port) ADMIN_PORT=$(port) concurrently \"npm run playground\" \"npm run dev:libs\" \"npm run start:happ\" \"sleep 5 && npm run start -w where\"",
    "dev:libs"              : "npm run build:watch -w @where/elements",
    "start-proxied"         : "npm run build:happ && npm run build -w @where/elements && cross-env HC_PORT=$(port) concurrently -k \"npm run start:happ-proxied\" \"npm run start -w where\"",
    "start-rerun"           : "cross-env HC_PORT=8888 concurrently -k \"npm run build:watch -w @where/elements\" \"hc s run 0 -p 8888\" \"npm run start -w where\"",
    "prepare"               : "npm run build -w @where/elements && npm run build -w where && npm run build -w ludotheque",
    "test"                  : "npm run build:happ && npm run build -w @where/elements && npm t -w tests",
    "start:happ"            : "RUST_LOG=warn echo \"pass\" | hc s --piped -f=$ADMIN_PORT generate dna/workdir/happ-where/where.happ --run=$HC_PORT -a where network mdns",
    "start:happ-proxied"    : "RUST_LOG=warn echo \"pass\" | hc s --piped -f=$ADMIN_PORT generate dna/workdir/happ-where/where.happ --run=$HC_PORT -a where network --bootstrap https://bootstrap-staging.holo.host/ quic -p=kitsune-proxy://SYVd4CF3BdJ4DS7KwLLgeU3_DbHoZ34Y-qroZ79DOs8/kitsune-quic/h/165.22.32.11/p/5779/--",
    "package"               : "npm run build:happ && npm run build:ui && bash scripts/copy-binaries.sh && npm run build:webapp",
    "build"                 : "bash scripts/build.sh",
    "build:ui"              : "npm run build -w @where/elements && npm run package -w where && npm run package -w ludotheque",
    "build:webapp"          : "hc web-app pack webhapp.workdir",
    "build:happ"            : "npm run build:dna && hc app pack dna/workdir/happ-where && npm run hash-zome",
    "build:dna"             : "npm run build:zome && hc dna pack dna/workdir/dna-where && hc dna pack dna/workdir/dna-ludotheque",
    "build:zome"            : "CARGO_TARGET_DIR=target cargo build --release --target wasm32-unknown-unknown",
    "clean"                 : "bash scripts/clean.sh",
    "clean:hc"              : "rm -rf .hc*",
    "playground"            : "run-singleton \"holochain-playground\"",
    "ci:hc-install"         : "bash scripts/install-hc-tools.sh",
    "hash-zome-install"     : "bash scripts/download-hash-zome.sh",
    "hash-zome"             : "bash scripts/write-zome-hash.sh",
    "dist"                  : "cd electron && npm run tsc && npm run dist",
    "dist-linux"            : "cd electron && npm run tsc && npm run dist-linux",
    "ci:tsc"                : "tsc --version",
    "electron"              : "npm run package && npm run start -w where"
  },
  "devDependencies": {
    "@holochain-playground/cli": "^0.0.8",
    "concurrently": "^6.2.1",
    "concurrently-repeat": "^0.0.1",
    "cross-env": "^7.0.3",
    "json-parse-better-errors": "^1.0.2",
    "new-port-cli": "^1.0.0",
    "rollup-plugin-copy": "^3.4.0",
    "run-singleton-cli": "^0.0.5"
  }
}
