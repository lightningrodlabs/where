{
  "name": "where-dev",
  "private": true,
  "workspaces": [
    "electron",
    "webapp",
    "webapp.ludotheque",
    "webcomponents",
    "we-applet"
  ],
  "scripts": {
    "version"               : "hc --version && holochain --version && lair-keystore --version",
    "ci:tsc"                : "tsc --version",
    "postinstall"           : "bash scripts/copy-binaries.sh",
    "ci:hc-install"         : "bash scripts/install-hc-tools.sh",
    "install:hash-zome"     : "bash scripts/download-hash-zome.sh",

    "hash-zome"             : "bash scripts/write-zome-hash.sh",
    "build:zome"            : "CARGO_TARGET_DIR=target cargo build --release --target wasm32-unknown-unknown && npm run hash-zome",
    "build:dna"             : "npm run build:zome && hc dna pack dna/workdir/dna-where && hc dna pack dna/workdir/dna-ludotheque",
    "build:happ"            : "npm run build:dna && hc app pack dna/workdir/happ-where && hc app pack dna/workdir/happ-where-standalone && hc app pack dna/workdir/happ-ludotheque && npm run copy:happ",
    "copy:happ"             : "cp dna/workdir/happ-where/where.happ electron/bin && cp dna/workdir/happ-ludotheque/ludotheque.happ electron/bin",

    "build:localize"        : "npm run localize:build -w webcomponents",
    "build:webui"           : "npm run build:localize && npm run build -w webcomponents && npm run build -w webapp",
    "build:devtest"         : "npm run clean:hc & npm run build:happ && npm run build -w webcomponents && npm run build -w webapp",

    "dev:components"        : "npm run build:watch -w webcomponents",

    "devtest"               : "npm run build:devtest && npm run start:agent",
    "devtest:standalone"    : "npm run build:devtest && npm run start:standalone",
    "devtest:we"            : "npm run build:devtest && npm run devtest -w we-applet",
    "devtest:electron"      : "npm run build:devtest && npm run devtest -w electron",

    "network"               : "npm run build:happ && concurrently-repeat \"npm run start:agent\"",
    "network-playground"    : "npm run build:happ && concurrently-repeat \"npm run start:agent:playground\"",
    "network-proxied"       : "npm run build:happ && concurrently-repeat \"npm run start:agent-proxied\"",
    "start:agent-proxied"   : "cross-env HC_PORT=$(port) ADMIN_PORT=$(port) APP_DEV=true concurrently \"npm run dev:components\" \"npm run start:happ-proxied\" \"sleep 7 && npm run start:ui -w webapp\"",
    "start:agent"           : "cross-env HC_PORT=$(port) ADMIN_PORT=$(port) APP_DEV=true concurrently \"npm run dev:components\" \"npm run start:happ\" \"sleep 7 && npm run start:ui -w webapp\"",
    "start:standalone"      : "cross-env HC_PORT=$(port) ADMIN_PORT=$(port) APP_DEV=true concurrently \"npm run dev:components\" \"npm run start:happ-standalone\" \"sleep 7 && npm run start:ui -w webapp\"",
    "start:agent-ludo"      : "cross-env HC_PORT=$(port) ADMIN_PORT=$(port) APP_DEV=true concurrently \"npm run dev:components\" \"npm run start:happ\" \"sleep 7 && npm run start:ui -w webapp.ludotheque\"",
    "start:agent:playground": "cross-env HC_PORT=$(port) ADMIN_PORT=$(port) APP_DEV=true concurrently \"npm run playground\" \"npm run dev:components\" \"npm run start:happ\" \"sleep 7 && npm run start:ui -w webapp\"",
    "start-rerun"           : "cross-env HC_PORT=8888 concurrently -k \"npm run build:watch -w webcomponents\" \"hc s run 0 -p 8888\" \"npm run start:ui -w webapp\"",
    "test"                  : "npm run build:happ && npm run build -w @where/elements && npm t -w @where/tests",
    "start:happ-standalone" : "RUST_LOG=warn echo \"pass\" | hc s --piped -f=$ADMIN_PORT generate dna/workdir/happ-where-standalone/where-standalone.happ --run=$HC_PORT -a where network mdns",
    "start:happ"            : "RUST_LOG=warn echo \"pass\" | hc s --piped -f=$ADMIN_PORT generate dna/workdir/happ-where/where.happ --run=$HC_PORT -a where network mdns",
    "start:happ-proxied"    : "RUST_LOG=warn echo \"pass\" | hc s --piped -f=$ADMIN_PORT generate dna/workdir/happ-where/where.happ --run=$HC_PORT -a where network --bootstrap https://bootstrap-staging.holo.host/ quic -p=kitsune-proxy://SYVd4CF3BdJ4DS7KwLLgeU3_DbHoZ34Y-qroZ79DOs8/kitsune-quic/h/165.22.32.11/p/5779/--",

    "playground"            : "run-singleton \"holochain-playground\"",

    "clean"                 : "bash scripts/clean.sh",
    "clean:npm"             : "bash scripts/clean-npm.sh",
    "clean:hc"              : "rm -rf .hc* && rm -rf we-applet/.hc*",
    "clean:all"             : "npm run clean:hc && npm run clean:npm && npm run clean"
  },
  "devDependencies": {
    "concurrently": "^6.2.1",
    "concurrently-repeat": "^0.0.1",
    "cross-env": "^7.0.3",
    "bestzip": "^2.2.0",
    "json-parse-better-errors": "^1.0.2",
    "new-port-cli": "^1.0.0",
    "run-singleton-cli": "^0.0.7"
  }
}
